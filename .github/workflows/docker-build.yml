name: Docker Build & Push

on:
  push:
    tags:
      - "v*.*.*"
    branches:
      - main
  workflow_dispatch:
    inputs:
      tag:
        description: 'Tag for the Docker image'
        required: true
        default: 'latest'
  workflow_call:
    inputs:
      tag:
        required: true
        type: string

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            herrlevin/reisetagebuch
          tags: |
            type=ref,event=branch
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v6
        with:
          context: ./
          file: Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Deploy via SSH
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT || 22 }}
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd ${{ secrets.PATH_TO_LARAVEL_PROJECT }}
            docker compose -f compose.yml pull
            docker compose -f compose.yml up -d

      - name: Deploy Prod via SSH if tag is a production release
        if: startsWith(github.ref, 'refs/tags/v')
        uses: appleboy/ssh-action@v1.2.2
        with:
          host: ${{ secrets.SSH_HOST_PROD || secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER_PROD || secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT_PROD || secrets.SSH_PORT || 22 }}
          key: ${{ secrets.SSH_KEY_PROD || secrets.SSH_KEY }}
          script: |
            cd ${{ secrets.PATH_TO_LARAVEL_PROJECT_PROD }}
            docker compose -f compose.yml pull
            docker compose -f compose.yml up -d
